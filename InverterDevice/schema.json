{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "modelTags": "greenEnergyProduction",
  "$id": "https://smart-data-models.github.io/data-models.Energy/InverterDevice/schema.json",
  "title": "InverterDevice schema",
  "description": "The data model is intended to describe the mechanical, electrical characteristics of an Inverter according to *DC - Direct Current Information* supplied as input and *AC - Alternating Current Information*  returned as output. *Remark*: This Data Model can be used directly as a main entity to describe the device [Inverter] or as a sub-entity of the Data Model {DEVICE] using a reference by the [refDevice] attribute.",
  "$schemaVersion": "0.0.2",
  "type": "object",
  "allOf": [
    {
      "$ref": "https://smart-data-models.github.io/data-models/common-schema.json#/definitions/GSMA-Commons"
    },
    {
      "$ref": "https://smart-data-models.github.io/data-models/common-schema.json#/definitions/Location-Commons"
    },
    {
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "InverterDevice"
          ],
          "description": "Property. NGSI Entity type. It has to be InverterDevice"
        },
        "refDevice": {
          "anyOf": [
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 256,
              "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$",
              "description": "Property. Identifier format of any NGSI entity"
            },
            {
              "type": "string",
              "format": "uri",
              "description": "Property. Identifier format of any NGSI entity"
            }
          ],
          "description": "Relationship. Reference to the Main Entity [Device](https://github.com/smart-data-models/dataModel.Device/blob/master/Device/doc/spec.md) if used as second link"
        },
        "refPointOfInterest": {
          "anyOf": [
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 256,
              "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$",
              "description": "Property. Identifier format of any NGSI entity"
            },
            {
              "type": "string",
              "format": "uri",
              "description": "Property. Identifier format of any NGSI entity"
            }
          ],
          "description": "Relationship. Reference to a [PointOfInterest](https://github.com/smart-data-models/dataModel.PointOfInterest/blob/master/PointOfInterest/doc/spec.md) linked with the observation"
        },
        "dateLastReported": {
          "type": "string",
          "format": "date-time",
          "description": "Property. A timestamps which denotes the last time when the device successfully reported data. Date and time in an ISO8601 UTCformat. Model:'https://schema.org/DateTime'"
        },
        "brandName": {
          "type": "string",
          "description": "Property. Brand Name of the item. Model:'https://schema.org/brand'"
        },
        "modelName": {
          "type": "string",
          "description": "Property. Model name of the item. Model:'https://schema.org/model'"
        },
        "manufacturerName": {
          "type": "string",
          "description": "Property. Manufacturer Name of the item. Model:'https://schema.org/manufacturer'"
        },
        "serialNumber": {
          "type": "string",
          "description": "Property. Serial numbers of the item. Model:'https://schema.org/brand'"
        },
        "application": {
          "type": "array",
          "description": "Property. Target application of the Device regarding the environment. A unique value. Enum:'electricMobility, energyStorage, emergencyStorage, lighting, industrialStorage, houseHoldStorage, robotics, production, other'",
          "items": {
            "type": "string",
            "enum": [
              "electricMobility",
              "energyStorage",
              "emergencyStorage",
              "lighting",
              "industrialStorage",
              "houseHoldStorage",
              "robotics",
              "production",
              "other"
            ]
          }
        },
        "typeOfUse": {
          "type": "string",
          "description": "Property. Accepted use regarding its positioning in an indoor / outdoor environment.. Enum:'indoor, outdoor, mixed, other'",
          "enum": [
            "indoor",
            "outdoor",
            "mixed",
            "other"
          ]
        },
        "installationMode": {
          "type": "string",
          "description": "Property. Positioning of the device in relation to a ground reference system. A unique value. Enum:'aerial, ground, pole, roofing, underGround, wall, other'",
          "enum": [
            "aerial",
            "ground",
            "pole",
            "roofing",
            "underGround",
            "wall",
            "other"
          ]
        },
        "installationCondition": {
          "type": "array",
          "description": "Property. Condition and possibility of use in the following environments. Enum:'extremeHeat, extremeCold, extremeHumidity, extremeClimate, desert, sand, marine, saline, dust, seismic, other'",
          "items": {
            "type": "string",
            "enum": [
              "extremeHeat",
              "extremeCold",
              "extremeHumidity",
              "extremeClimate",
              "desert",
              "sand",
              "marine",
              "saline",
              "dust",
              "seismic",
              "other"
            ]
          }
        },
        "possibilityOfUse": {
          "type": "string",
          "description": "Property. Possibility of use. Enum:'mixed, mobile, stationary, other'",
          "enum": [
            "mixed",
            "mobile",
            "stationary",
            "other"
          ]
        },
        "documentation": {
          "type": "string",
          "format": "uri",
          "description": "Property. Technical Documentation (Installation / maintenance / used). Model:'https://schema.org/URL'"
        },
        "phaseType": {
          "type": "string",
          "description": "Property. Type of Phase. A unique value. Enum:'singlePhase,threePhase'",
          "enum": [
            "singlePhase",
            "threePhase"
          ]
        },
        "supplyPhaseNb": {
          "type": "number",
          "minimum": 0,
          "description": "Property. Number of power supply phases. Model:'https://schema.org/Number'"
        },
        "dimension": {
          "type": "object",
          "description": "Property. External dimension of a Panel. The format is structured by a sub-property of 3 items. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **CMT** represents Centimeter. Units:'Centimeters'",
          "properties": {
            "length": {
              "type": "number",
              "minimum": 0
            },
            "height": {
              "type": "number",
              "minimum": 0
            },
            "depth": {
              "type": "number",
              "minimum": 0
            }
          }
        },
        "weight": {
          "type": "number",
          "minimum": 0,
          "description": "Property. Weight. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **KGM** represents Kilogram. Units:'Kilograms'. Model:'https://schema.org/Number'"
        },
        "protectionIP": {
          "type": "string",
          "description": "Property. IP '*Ingress Protection*' for the Junction Box. This is the level classifies and rates the degree of protection provided by mechanical casings and electrical enclosures against intrusion, dust, accidental contact, and water according to International Electrotechnical Commission standard (EN 60-529). - First digit: Solid particle protection (Single numeral: 0\u20136 or 'X'). - Second digit: Liquid ingress protection (Single numeral: 0\u20139 or 'X' ).- Third digit: Personal Protection  against access to dangerous parts (optional additional letter).- Fourth digit: Other protections (optional additional letter)"
        },
        "protectionIK": {
          "type": "number",
          "description": "Property. IK '*Mecanic Protection*' level relating to numeric classification for the degrees of protection provided by enclosures for electrical equipment against external mechanical impacts, according to International Electro technical Commission standard (EN 62-262). - IK varies from 0 (minimum resistance) to 10 (maximum resistance) which represents an Impact Energy (Unit Joule). Model:'https://schema.org/Number'"
        },
        "protectionClassSLK": {
          "type": "string",
          "enum": [
            "0",
            "1",
            "2",
            "3"
          ],
          "description": "Property. Protection class (SKL). - 0 : main insulation without earth connection. - 1 : main insulation and additional insulation (earth terminal). - 2 : double or reinforced insulation (equivalent to twice the main insulation) without accessible metal part. - 3 : operating in very low safety voltage (SELV) (50V maximum)"
        },
        "overVoltageCategory": {
          "type": "string",
          "description": "Property. Over voltage category. - I : connection to circuits with transient over voltages at an appropriate low level. - II : main insulation and additional insulation (earth terminal). - III : fixed installations with reliability and availability making subject to specific specifications. - IV : materials at the origin of the electrical installation such as electric meters and main materials over current protection",
          "enum": [
            "I",
            "II",
            "III",
            "IV"
          ]
        },
        "operatingTemperature": {
          "type": "object",
          "description": "Property. Ambient operating temperature range. This is the minimum and maximum resistance to cold and heat. The format is structured by a sub-property of 2 items. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **CEL** represents Degree Celsius",
          "properties": {
            "min": {
              "type": "number",
              "minimum": -50
            },
            "max": {
              "type": "number",
              "minimum": 0
            }
          }
        },
        "operatingAirHumidity": {
          "type": "object",
          "description": "Property. Ambient operating Air Humidity range. The format is structured by a sub-property of 2 items. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **P1** represents Percent",
          "properties": {
            "min": {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            },
            "max": {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            }
          }
        },
        "nominalPowerDC": {
          "type": "number",
          "description": "Property. Nominal Power or Maximum Power factor for cos phi=1. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **WTT** represents Watt. Model:'https://schema.org/Number'. Units:'Watt'"
        },
        "nominalVoltageDC": {
          "type": "number",
          "description": "Property. Nominal voltage. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **VLT** represents Volt. Model:'https://schema.org/Number'. Units:'Volt'"
        },
        "nominalAmpereDC": {
          "type": "number",
          "description": "Property. Nominal Amperage. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **AMP** represents Ampere. Model:'https://schema.org/Number'. Units:'Ampere'"
        },
        "nominalFrequencyDC": {
          "type": "number",
          "description": "Property.  Nominal Frequency. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **HTZ** represents Hertz. Model:'https://schema.org/Number'. Units:'Hertz'"
        },
        "operatingVoltageDC": {
          "type": "object",
          "description": "Property. Minimum and Maximum voltage allowed. The format is structured by a sub-property of 2 items. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **VLT** represents Volt.. Model:'https://schema.org/Number'. Units:'Volt'",
          "properties": {
            "min": {
              "type": "number",
              "minimum": 0
            },
            "max": {
              "type": "number",
              "minimum": 0
            }
          }
        },
        "operatingAmpereDC": {
          "type": "object",
          "description": "Property. Minimum and Maximum Ampere allowed.. The format is structured by a sub-property of 2 items. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **AMP** represents Ampere. Model:'https://schema.org/Number'. Units:'Ampere'",
          "properties": {
            "min": {
              "type": "number",
              "minimum": 0
            },
            "max": {
              "type": "number",
              "minimum": 0
            }
          }
        },
        "operatingFrequencyDC": {
          "type": "object",
          "description": "Property. Minimum and Maximum Frequency allowed. The format is structured by a sub-property of 2 items. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **HTZ** represents Hertz. Model:'https://schema.org/Number'. Units:'Hertz'",
          "properties": {
            "min": {
              "type": "number",
              "minimum": 0
            },
            "max": {
              "type": "number",
              "minimum": 0
            }
          }
        },
        "mPPTPVVoltageDC": {
          "type": "object",
          "description": "Property. Minimum and Maximum Photo-voltaic voltage range, MPPT allowed. The format is structured by a sub-property of 2 items. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **VLT** represents Volt. Model:'https://schema.org/Number'. Units:'Volt'",
          "properties": {
            "min": {
              "type": "number",
              "minimum": 0
            },
            "max": {
              "type": "number",
              "minimum": 0
            }
          }
        },
        "startingVoltageDC": {
          "type": "number",
          "description": "Property. Starting voltage. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **VLT** represents Volt. Model:'https://schema.org/Number'. Units:'Volt'"
        },
        "nbMPPTrackersDC": {
          "type": "number",
          "description": "Property. Number of MPP trackers. Model:'https://schema.org/Number'"
        },
        "nbInputParallelDC": {
          "type": "string",
          "description": "Property. Maximum Number of inputs (in parallel). Model:'https://schema.org/Number'"
        },
        "maxInputCurrentParallelAssembly": {
          "type": "number",
          "description": "Property. Max. Current Input with an Parallel Assembly. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **AMP** represents Ampere. Model:'https://schema.org/Number'. Units:'Ampere'"
        },
        "nominalPowerAC": {
          "type": "number",
          "description": "Property. Nominal Power . The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **WTT** represents Watt. Model:'https://schema.org/Number'. Units:'Watt'"
        },
        "maxOutputPowerAC": {
          "type": "number",
          "description": "Property. Maximum Power or Apparent Power. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **D46** represents Volt Ampere. Model:'https://schema.org/Number'. Units:'Volt Ampere'"
        },
        "nominalVoltageAC": {
          "type": "number",
          "description": "Property. Nominal battery voltage *(Code U)*. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **VLT** represents Volt. Model:'https://schema.org/Number'. Units:'Volt'"
        },
        "nominalAmpereAC": {
          "type": "number",
          "description": "Property. Nominal Amperage *(Code I)*. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **AMP** represents Ampere. Model:'https://schema.org/Number'. Units:'Ampere'"
        },
        "nominalFrequencyAC": {
          "type": "number",
          "description": "Property. Nominal Frequency. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **HTZ** represents Hertz. Model:'https://schema.org/Number'. Units:'Hertz'"
        },
        "operatingVoltageAC": {
          "type": "object",
          "description": "Property. Minimum and Maximum voltage allowed. The format is structured by a sub-property of 2 items. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **VLT** represents Volt. Units:'Volt'. Model:'http://schema.org/StructuredValue'",
          "properties": {
            "min": {
              "type": "number",
              "minimum": 0
            },
            "max": {
              "type": "number",
              "minimum": 0
            }
          }
        },
        "operatingAmpereAC": {
          "type": "object",
          "description": "Property. Minimum and Maximum Ampere allowed.. The format is structured by a sub-property of 2 items. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **AMP** represents Ampere. Model:'http://schema.org/Number'. Units:'Ampere'",
          "properties": {
            "min": {
              "type": "number",
              "minimum": 0
            },
            "max": {
              "type": "number",
              "minimum": 0
            }
          }
        },
        "operatingFrequencyAC": {
          "type": "object",
          "description": "Property. Minimum and Maximum Frequency allowed. The format is structured by a sub-property of 2 items. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **HTZ** represents Hertz. Units:'Volt'. Model:'http://schema.org/StructuredValue'. Units:'Hertz'",
          "properties": {
            "min": {
              "type": "number",
              "minimum": 0
            },
            "max": {
              "type": "number",
              "minimum": 0
            }
          }
        },
        "powerFactorAC": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Property. Power factor for cos phi. A value between [0,1] Units:'Volt'. Model:'http://schema.org/Number'"
        },
        "moduleYieldRate": {
          "type": "object",
          "description": "Property. Yield Rate of the Device. The format is structured by a sub-property of 2 items (European Standard - Manufacturer Standard). The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **P1** represents Percent. Model:'http://schema.org/StructuredValue'",
          "properties": {
            "euro": {
              "type": "number"
            },
            "eta": {
              "type": "number"
            }
          }
        },
        "noiseLevel": {
          "type": "number",
          "description": "Property. Sound Power level of the Device. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **2N** represents Decibel. Units:'dB'. Model:'http://schema.org/Number'"
        },
        "self-consumption": {
          "type": "number",
          "description": "Property. Self-consumption during nigth. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes).  For instance, **WTT** represents Watt. Units:'Watt'. Model:'http://schema.org/Number'"
        },
        "topology": {
          "type": "string",
          "description": "Property. Description of the topology of the installation"
        },
        "coolingSystem": {
          "type": "string",
          "description": "Property.  Cooling System of the Device. Enum:'Convection, OptiCool, Regulated-fan, Other'",
          "enum": [
            "Convection",
            "OptiCool",
            "Regulated-fan",
            "Other"
          ]
        },
        "inverterStatus": {
          "type": "array",
          "description": "Property. Status of the inverter. A combination of values",
          "items": {
            "type": "string",
            "enum": [
              "00-OnSector",
              "01-PowerFailure/OnBattery",
              "02-LossCommunication",
              "03-BatteryFault",
              "04-SystemShutDown",
              "05-TensionDip",
              "06-OverVoltage",
              "07-VoltageDrop",
              "08-VoltageIncrease",
              "09-LineNoise",
              "10-FrequencyVariation",
              "11-TransientDistortion",
              "12-HarmonicDistortion"
            ]
          }
        }
      }
    }
  ],
  "required": [
    "id",
    "type",
    "location",
    "dateLastReported",
    "phaseType"
  ]
}